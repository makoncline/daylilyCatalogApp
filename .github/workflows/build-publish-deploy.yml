name: Build and publish docker Image CI

# on:
#   push:
#     branches:
#       - master
on: [pull_request]

jobs:
  build-publish-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Get short SHA
        id: env
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: "Build server"
        run: yarn build:prod:server
      - name: "Publish server"
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: makon/daylilycatalog:server-${{ steps.env.outputs.sha }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  build-publish-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Get short SHA
        id: env
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: "Build worker"
        run: yarn build:prod:worker
      - name: "Publish worker"
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: makon/daylilycatalog:worker-${{ steps.env.outputs.sha }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  deploy:
    needs: [build-publish-server, build-publish-worker]
    runs-on: ubuntu-latest
    steps:
      - name: Get short SHA
        id: env
        run: echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Deploy containers to droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script_stop: true
          script: |
            echo starting...
            TAG=-${{ steps.env.outputs.sha }}
            echo TAG set to $TAG
            docker system prune -f
            echo docker pruned
            cd daylilyCatalog/
            cd server/
            TAG=$TAG docker-compose pull
            echo server image pulled
            cd ../worker
            TAG=$TAG docker-compose pull
            echo worker image pulled
            cd ../server
            TAG=$TAG docker-compose down
            echo server stopped
            TAG=$TAG docker-compose up -d
            echo server started
            echo "$(date +%F-%T) - $TAG" >> tags.txt
            echo TAG: $TAG saved to server tags.txt
            cd ../worker
            TAG=$TAG docker-compose down
            echo worker stopped
            TAG=$TAG docker-compose up -d
            echo worker started
            echo "$(date +%F-%T) - $TAG" >> tags.txt
            echo TAG: $TAG saved to worker tags.txt
            sleep 5
            cd ../server
            echo server logs:
            TAG=$TAG docker-compose logs
            echo
            cd ../worker
            echo worker logs:
            TAG=$TAG docker-compose logs
            echo
            unset TAG
            echo TAG unset
            sleep 5
            echo done
